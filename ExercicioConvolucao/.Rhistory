rm(list = ls())
require(RnavGraphImageData)
require(OpenImageR)
library(ggfortify)
require(caret)
require(ks)
data(faces)
faces <- t(faces)
cores <-rainbow(50)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
applyReLU <- function ( x ) {
retVariable <- matrix(0, nrow = nrow(x), ncol = ncol(x))
for(i in 1:nrow(x)) {
for(j in 1:ncol(x)) {
if(x[i,j] > 0) {
retVariable[i,j] <- x[i,j]
}
}
}
return(retVariable)
}
fBordas = matrix(c(-1,-1,-1,-1,8,-1,-1,-1,-1), nrow = 3, ncol = 3)
fLinhasVerticais = matrix(c(1,2,1,0,0,0,-1,-2,-1),nrow=3, ncol = 3)
fLinhasHorizontais = matrix(c(1,0,-1,2,0,-2,1,0,-1),nrow=3, ncol = 3)
fSharpen = matrix(c(0,-1,0,-1,5,-1,0,-1,0),nrow=3, ncol = 3)
MostraImagem(faces[377,])
Sys.sleep(5)
conv <- convolution(matrix( faces[377,], nrow=64 ), fBordas)
MostraImagem(conv)
Sys.sleep(5)
conv <- convolution(matrix( faces[377,], nrow=64 ), fLinhasVerticais)
MostraImagem(conv)
Sys.sleep(5)
conv <- convolution(matrix( faces[377,], nrow=64 ), fLinhasHorizontais)
MostraImagem(conv)
Sys.sleep(5)
conv <- convolution(matrix( faces[377,], nrow=64 ), fSharpen)
MostraImagem(conv)
#for (i in 1:nrow(faces)){
#  MostraImagem( faces[i,])
#}
conv <- applyReLU(matrix( faces[377,], nrow=64 ))
MostraImagem(conv)
MostraImagem(faces[377,])
conv <- applyReLU(matrix( faces[377,], nrow=64 ))
MostraImagem(conv)
conv <- convolution(matrix( faces[377,], nrow=64 ), fBordas)
MostraImagem(conv)
convReLU <- applyReLU(conv)
MostraImagem(conv)
View(conv)
View(convReLU)
MostraImagem(convReLU)
applyMaxPooling <- function ( x ) {
linhas <- seq(1, nrow(x) - 1, by = 2)
colunas <- seq(1, ncol(x) - 1, by = 2)
retVariable <- matrix(0, nrow = length(linhas), ncol = length(colunas))
for(i in linhas) {
for(j in colunas) {
retVariable[i - floor(i/2),j - floor(j/2)] <- max(x[i:i+1,j:j+1])
}
}
return(retVariable)
}
convMaxPool <- applyMaxPooling(conv)
MostraImagem(convMaxPool)
View(convMaxPool)
MostraImagem <- function( x, cols = 64 ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=cols )
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
MostraImagem(convMaxPool, 32)
convReLU <- applyReLU(matrix( faces[377,], nrow=64 ))
MostraImagem(convReLU)
convMaxPool <- applyMaxPooling(matrix( faces[377,], nrow=64 ))
MostraImagem(convMaxPool, 32)
convReLU <- applyReLU(matrix( faces[377,], nrow=64 ))
MostraImagem(convReLU, ncol(convReLU))
MostraImagem(faces[377,])
face <- faces[377,]
face <- face
min(face)
max(face)
MostraImagem(convMaxPool, ncol(convMaxPool))
convReLUFiltered <- applyReLU(conv)
MostraImagem(convReLUFiltered, ncol(convReLUFiltered))
convMaxPoolFiltered <- applyMaxPooling(conv)
MostraImagem(convMaxPoolFiltered, ncol(convMaxPoolFiltered))
rm(list = ls())
require(RnavGraphImageData)
require(OpenImageR)
library(ggfortify)
require(caret)
require(ks)
data(faces)
faces <- t(faces)
cores <-rainbow(50)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
fBordas = matrix(c(-1,-1,-1,-1,8,-1,-1,-1,-1), nrow = 3, ncol = 3)
fLinhasVerticais = matrix(c(1,2,1,0,0,0,-1,-2,-1),nrow=3, ncol = 3)
fLinhasHorizontais = matrix(c(1,0,-1,2,0,-2,1,0,-1),nrow=3, ncol = 3)
fSharpen = matrix(c(0,-1,0,-1,5,-1,0,-1,0),nrow=3, ncol = 3)
MostraImagem(faces[377,])
Sys.sleep(5)
conv <- convolution(matrix( faces[377,], nrow=64 ), fBordas)
face <- faces[377,]
conv <- convolution(matrix( faces[377,], nrow=64 ), fLinhasHorizontais)
matrix( faces[377,], nrow=64 )
fBordas
