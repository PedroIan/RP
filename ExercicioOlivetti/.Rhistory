rm(list = ls())
require(RnavGraphImageData)
data( faces )
faces <- t( faces )
rm(list = ls())
require(RnavGraphImageData)
data('faces')
faces <- t('faces')
View(faces)
rm(list = ls())
require(RnavGraphImageData)
data('faces')
faces <- t(faces)
require(RnavGraphImageData)
source('D:/Users/pedro/Documents/GitHub/RP/ExercicioOlivetti/Olivetti.R')
require(RnavGraphImageData)
data(faces)
faces <- t(faces)
View(faces)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
MostraImagem( faces[1,])
y <- NULL
for(i in 1:nrow(faces) ) {
y <- c( y, ((i-1) %/% 10) + 1 )
}
print(y)
source('D:/Users/pedro/Documents/GitHub/RP/ExercicioOlivetti/Olivetti.R')
rm(list = ls())
require(RnavGraphImageData)
library(ggfortify)
data(faces)
faces <- t(faces)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
MostraImagem( faces[1,])
y <- NULL
for(i in 1:nrow(faces) ) {
y <- c( y, ((i-1) %/% 10) + 1 )
}
print(y)
View(faces)
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
data(faces)
faces <- t(faces)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
MostraImagem( faces[1,])
y <- NULL
for(i in 1:nrow(faces) ) {
y <- c( y, ((i-1) %/% 10) + 1 )
}
print(y)
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
data(faces)
faces <- t(faces)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
print(meuPCA(img))
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
MostraImagem( faces[1,])
y <- NULL
for(i in 1:nrow(faces) ) {
y <- c( y, ((i-1) %/% 10) + 1 )
}
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
data(faces)
faces <- t(faces)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
print(meuPCA(img))
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
MostraImagem( faces[1,])
rotulos <- NULL
for(i in 1:nrow(faces) ) {
rotulos <- c( rotulos, ((i-1) %/% 10) + 1 )
}
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
data(faces)
faces <- t(faces)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
print(meuPCA(img,2))
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
MostraImagem( faces[1,])
rotulos <- NULL
for(i in 1:nrow(faces) ) {
rotulos <- c( rotulos, ((i-1) %/% 10) + 1 )
}
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
data(faces)
faces <- t(faces)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
print(meuPCA(img,2))
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
MostraImagem( faces[1,])
rotulos <- NULL
for(i in 1:nrow(faces) ) {
rotulos <- c( rotulos, ((i-1) %/% 10) + 1 )
}
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
data(faces)
faces <- t(faces)
#MostraImagem <- function( x ) {
x<-faces[1,]
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
xIn<-img
nDimensoesFinal <- 2
xMedias <- colMeans(xIn)
xNormalizado <- xIn - xMedias
S <- cov(xNormalizado)
decomposicao <- eigen(S)
randomColumns <- sample.int(ncol(decomposicao$vectors), nDimensoesFinal)
vectors <- matrix(0, ncol=nDimensoesFinal, nrow = length(randomColumns))
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
data(faces)
faces <- t(faces)
#MostraImagem <- function( x ) {
x<-faces[1,]
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
print(meuPCA(img,2))
xIn<-img
nDimensoesFinal <- 2
xMedias <- colMeans(xIn)
xNormalizado <- xIn - xMedias
S <- cov(xNormalizado)
decomposicao <- eigen(S)
randomColumns <- sample.int(ncol(decomposicao$vectors), nDimensoesFinal)
vectors <- matrix(0, ncol=nDimensoesFinal, nrow = nrow(decomposicao$vectors))
for (i in 1:length(randomColumns)) {
vectors[,i] <- decomposicao$vectors[,i]
}
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
data(faces)
faces <- t(faces)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
print(meuPCA(img,2))
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
MostraImagem( faces[1,])
rotulos <- NULL
for(i in 1:nrow(faces) ) {
rotulos <- c( rotulos, ((i-1) %/% 10) + 1 )
}
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
data(faces)
faces <- t(faces)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
print(meuPCA(img,2))
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
MostraImagem( faces[1,])
rotulos <- NULL
for(i in 1:nrow(faces) ) {
rotulos <- c( rotulos, ((i-1) %/% 10) + 1 )
}
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
data(faces)
faces <- t(faces)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
print(meuPCA(img,2))
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
for (i in 1:nrow(faces)){
MostraImagem( faces[i,])
Sys.sleep(5)
}
rotulos <- NULL
for(i in 1:nrow(faces) ) {
rotulos <- c( rotulos, ((i-1) %/% 10) + 1 )
}
library(mlbench)
a<-mlbench.2dnormals(200)
View(a)
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
library(mlbench)
data(faces)
faces <- t(faces)
a<-mlbench.2dnormals(200)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
print(meuPCA(img,2))
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
dimensaoFinal<-2
points <- matrix(0, nrow=nrow(faces), ncol=dimensaoFinal)
for (i in 1:nrow(faces)){
MostraImagem( faces[i,])
Sys.sleep(5)
singleImage <- matrix( faces[i,], nrow=64 )
pcaResult <- meuPCA(singleImage, dimensaoFinal)
points[i,] <- singleImage %*% pcaResult[[2]]
}
rotulos <- NULL
for(i in 1:nrow(faces) ) {
rotulos <- c( rotulos, ((i-1) %/% 10) + 1 )
}
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
library(mlbench)
data(faces)
faces <- t(faces)
a<-mlbench.2dnormals(200)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
dimensaoFinal<-2
points <- matrix(0, nrow=nrow(faces), ncol=dimensaoFinal)
for (i in 1:nrow(faces)){
MostraImagem( faces[i,])
singleImage <- matrix( faces[i,], nrow=64 )
pcaResult <- meuPCA(singleImage, dimensaoFinal)
points[i,] <- singleImage %*% pcaResult[[2]]
}
rotulos <- NULL
for(i in 1:nrow(faces) ) {
rotulos <- c( rotulos, ((i-1) %/% 10) + 1 )
}
View(pcaResult)
View(pcaResult)
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
library(mlbench)
data(faces)
faces <- t(faces)
a<-mlbench.2dnormals(200)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
dimensaoFinal<-2
points <- matrix(0, nrow=nrow(faces), ncol=dimensaoFinal)
for (i in 1:nrow(faces)){
MostraImagem( faces[i,])
singleImage <- matrix( faces[i,], nrow=64 )
Sys.sleep(3)
pcaResult <- meuPCA(singleImage, dimensaoFinal)
points[i,] <- singleImage %*% pcaResult[[2]]
}
rotulos <- NULL
for(i in 1:nrow(faces) ) {
rotulos <- c( rotulos, ((i-1) %/% 10) + 1 )
}
rm(list = ls())
require(RnavGraphImageData)
source('meuPCA.R')
library(ggfortify)
library(mlbench)
data(faces)
faces <- t(faces)
a<-mlbench.2dnormals(200)
MostraImagem <- function( x ) {
rotate <- function(x) t( apply(x, 2, rev) )
img <- matrix( x, nrow=64 )
cor <- rev( gray(50:1/50) )
image( rotate( img ), col=cor )
}
dimensaoFinal<-2
points <- matrix(0, nrow=nrow(faces), ncol=dimensaoFinal)
for (i in 1:nrow(faces)){
MostraImagem( faces[i,])
singleImage <- matrix( faces[i,], nrow=64 )
Sys.sleep(3)
#pcaResult <- meuPCA(singleImage, dimensaoFinal)
#points[i,] <- singleImage %*% pcaResult[[2]]
}
source('D:/Users/pedro/Documents/GitHub/RP/ExercicioOlivetti/Olivetti.R')
source('D:/Users/pedro/Documents/GitHub/RP/ExercicioOlivetti/Olivetti.R')
